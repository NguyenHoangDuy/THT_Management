@using THT.Models;

@{
    ViewBag.Title = "Cần đèn";
}

<script src="@Url.Content("~/Scripts/jquery.blockUI.js")"></script>

@{
    var dict = Model != null ? (Dictionary<string, object>)Model : new Dictionary<string, object>();
    var asset = dict.ContainsKey("asset") ? (Dictionary<string, bool>)dict["asset"] : new Dictionary<string, bool>();
    var listActiveStatus = dict.ContainsKey("activestatus") ? (List<ActiveStatus>)dict["activestatus"] : new List<ActiveStatus>();
}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
<style>
    .ace-file-input {
        position: relative;
        height: 38px;
        line-height: 38px;
        margin-bottom: 9px;
    }
</style>

<style>
    .ace-file-input {
        position: relative;
        height: 38px;
        line-height: 38px;
        margin-bottom: 9px;
    }
</style>
<section>
    @*<div class="bordered">*@
    @if (Auth_Action.AssetResult(asset, "Search"))
    {
        <div class="jarviswidget" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-deletebutton="false">
            <div>
                <div class="widget-body no-padding">
                    <form class="smart-form">
                        <fieldset>
                            <div class="row">
                                <section class="col col-5">
                                    @*<label class="label" style="float: left; width: 19% ; color: black;font-weight: bold;">Loại sản phẩm:</label>*@
                                    <label class="select" style="margin-top: -4px">
                                        @*@Html.DropDownList("listCatagory", new SelectList(ViewBag.listProductType, "ParamID", "Value"), new { style = "width: 81%", multiple = "multiple" })*@
                                        @Html.DropDownList("searchTypeId", new SelectList(ViewBag.listTypeId, "Value", "Text", 1), new { style = "width: 100%" })

                                    </label>
                                </section>
                            </div>
                        </fieldset>
                    </form>

                </div>
            </div>
        </div>
    }

    <div class="jarviswidget bordered">
        <div class="row">
            <article class="col-sm-12">
                <div class="widget-body">
                    @*<a href="/Upload/11aad1a1-8a1e-4a42-bd85-c774751ba175.png?width=400" class="preview" title=""><img src="/Upload/11aad1a1-8a1e-4a42-bd85-c774751ba175.png?height=32" style="height:20px"></a>*@
                    @(Html.Kendo().Grid<THT.Models.RodOne>()
                    .Name("grid")
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.Id).Hidden();
                        columns.Bound(p => p.TypeId).Title("Loại").Hidden();
                        columns.Bound(p => p.Id).HeaderTemplate("<input type='checkbox' id= 'checkboxcheckAll'  onClick='checkAllHeader(this)' />")
                           .ClientTemplate("<input class='checkrowid' type='checkbox' id='#=Id#' />")
                           .HtmlAttributes(new { style = "text-align:center" })
                           .HeaderHtmlAttributes(new { style = "text-align:center" })
                           .Width(40).Filterable(false).Sortable(false);

                        if (asset.ContainsKey("Update") && asset["Update"])
                        {
                            columns.Bound(p => p.Id).ClientTemplate("Sửa").HtmlAttributes(new { data_id = "#=Id#", onclick = "onOpenPopup(1,this)", @style = "color:\\#428bca;cursor:pointer;text-decoration:underline" }).Title("").Width(40);
                        }

                        columns.Bound(p => p.TypeCode).Hidden();
                        //columns.Bound(p => p.ImagePath).Title("").Width(40)
                        //        .ClientTemplate(@"<a href='/Upload/#:[ImagePath]#?width=400' class='preview' title=''><img src='/Upload/#:[ImagePath]#?width=32'  style='height:20px'></a>");
                        columns.Bound(p => p.ImagePath).Title("").Width(40)
                        .ClientTemplate(@"#if(ImagePath != null){#<a href='" + @Url.Content("~/Upload/") + "#:[ImagePath]#?width=400' class='preview' title=''><img src='" + @Url.Content("~/Upload/") + "#:[ImagePath]#?width=32'  style='height:20px'></a>#}#");
                        columns.Bound(p => p.Code).Title("Giá trị thêm mới").Width(300).HtmlAttributes(new { style = "background-color:rgb(198, 239, 206);" });
                        columns.Bound(p => p.Name).Title("Giá trị thêm mới").HtmlAttributes(new { style = "Width:100%;background-color:rgb(198, 239, 206); " });
                        columns.Bound(p => p.Weight).Title("Trọng lượng").Width(300).HtmlAttributes(new { style = "background-color:rgb(198, 239, 206);", @type = "number" });
                    })
                    .ToolBar(toolBar =>
                        {
                            toolBar.Template(@<text>
                                <div class="pull-left">
                                    @if (asset.ContainsKey("Insert") && asset["Insert"])
                                    {
                                        <a class="btn btn-sm btn-success" href="javascript:onOpenPopup(0,this)" id="btnInsert">
                                            <i class="fa fa-plus"></i> Thêm dòng
                                        </a>
                                    }
                                    @if (asset.ContainsKey("Delete") && asset["Delete"])
                                    {
                                        <a class="btn btn-sm btn-danger" href="javascript:Delete()" id="btnDelete">
                                            <i class="fa fa-times"></i> Xóa dòng
                                        </a>
                                    }
                                </div>

                            </text>);
                        })
                        .Events(events => { events.DataBound("onDatabound"); })
                        .Pageable(pager => pager.PageSizes(new[] { 20, 100, 200, 300 }))
                        .Resizable(r => r.Columns(true))
                        .Navigatable()
                        .Scrollable()
                        //.Sortable()
                        //.Editable(editable => editable.Mode(GridEditMode.InCell))
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .Batch(true)
                            .PageSize(100)
                            .Model(model =>
                            {
                                model.Id(p => p.Id);
                                model.Field(p => p.Id).Editable(false);
                                model.Field(p => p.TypeId).Editable(true);
                            })
                            .Events(e => { e.RequestEnd("onRequestEnd"); e.Error("error_handler"); e.RequestStart("onRequestStart"); })
                            .Read(read => read.Action("Read", "RodOne"))
                        //.Create(read => read.Action("Create", "FoundationBoltOne").Data("onDataDetail"))
                        //.Update(read => read.Action("Update", "FoundationBoltOne").Data("onDataDetail"))
                        )
                    )
                </div>
            </article>
        </div>
    </div>

    <div id="popup" class="row" style="margin:0 auto;display:none">
        @*<div class="bordered">*@
        @using (Html.BeginForm("Create", "RodOne", FormMethod.Post, new { @class = "smart-form", id = "formPopup", enctype = "multipart/form-data" }))
        {
            @Html.Hidden("Id");
            <fieldset style="float: left; width: 370px; padding-left: 0px; padding-right: 0px;">
                <section style="display:none; float:left;"></section>

                <section style="float:left;">
                    <div style="float: left; width: 120px; margin-left:0;">
                        <label class="label" style="float:right;">Chọn loại (*)</label>
                    </div>
                    <div style="float: left; width: 240px; margin-right: 0; margin-left: 10px;">
                        <label class="input" style="float: right; width: 240px;">
                            @Html.DropDownList("TypeId", new SelectList(ViewBag.listTypeId, "Value", "Text"), new { onchange = "GetRodHeader_popup()" })
                        </label>
                        <div style="clear:both"></div>
                    </div>
                </section>
                <section style="float:left;">
                    <div style="float: left; width: 120px; margin-left:0;">
                        <label class="label" style="float:right;">Loại cần:</label>
                    </div>
                    <div style="float: left; width: 240px; margin-right: 0; margin-left: 10px;">
                        <label class="input" style="float:right;width:240px;">
                            @Html.DropDownList("TypeCode", new SelectList(ViewBag.listLoaiCan, "ParamID", "Value"), "-- Chọn giá trị --")
                        </label>
                        <div style="clear:both"></div>
                    </div>
                </section>
                <section style="float:left;">
                    <div style="float: left; width: 120px; margin-left:0;">
                        <label class="label" style="float:right;" id="lblCode"></label>
                    </div>
                    <div style="float: left; width: 240px; margin-right: 0; margin-left: 10px;">
                        <label class="input" style="float: left; width: 240px;">
                            @Html.TextBox("Code", "", new { @class = "input-xs popup_text_right", })
                        </label>
                        <span id="txtFormat" style="margin-left:10px"></span>
                        <div style="clear:both"></div>
                    </div>
                </section>

                <section style="float:left;">
                    <div style="float: left; width: 120px; margin-left:0;">
                        <label class="label" style="float:right;" id="lblName"></label>
                    </div>
                    <div style="float: left; width: 240px; margin-right: 0; margin-left: 10px;">
                        <label class="input" style="float: left; width: 240px;">
                            @Html.TextBox("Name", "", new { @class = "input-xs popup_text_right", })
                        </label>
                        <span id="txtFormat" style="margin-left:10px"></span>
                        <div style="clear:both"></div>
                    </div>
                </section>

                <section style="float:left;">
                    <div style="float: left; width: 120px; margin-left:0;">
                        <label class="label" style="float:right;">Khối lượng</label>
                    </div>
                    <div style="float: left; width: 240px; margin-right: 0; margin-left: 10px;">
                        <label class="input" style="float:left;width:240px;">
                            @Html.TextBox("Weight", "", new { @class = "input-xs popup_text_right allownumericwithdecimal", })
                        </label>
                        <span id="txtFormat" style="margin-left:10px"></span>
                        <div style="clear:both"></div>
                    </div>
                </section>

                <section style="float:left;">
                    <div style="float: left; width: 120px; margin-left:0;">
                        <label class="label" style="float:right">File:</label>
                    </div>
                    <div style="float: left; width: 240px; margin-right: 0; margin-left: 10px;">
                        <label class="select" style="float: right">
                            <input type="file" name="FileUpload" />
                        </label>
                        <div style="clear:both"></div>
                    </div>
                </section>
            </fieldset>

            <div class="my-footer-popup">
                <button type="button" id="btnCancel" class="btn btn-sm btn-default" style="float: right;margin-top:5px;margin-left:5px" onclick="ResetForm()">
                    <i class="fa fa-refresh"></i>  Hủy
                </button>
                <button type="submit" id="btnSubmit" class="btn btn-sm btn-info" style="float: right;margin-top:5px;">
                    <i class="fa fa-save"></i>  Lưu
                </button>
                <img src="@Url.Content("~/Content/Bootstrap/loading.gif")" class="hide" id="loading" style="margin-top: 17px;" />
            </div>

            @*<footer>
                    <button type="submit" class="k-button k-button-icontext btn_custom" style="float: left;" id="btnSubmit">Lưu</button>
                    <img src="@Url.Content("~/Content/Bootstrap/loading.gif")" class="hide" id="loading" style="margin-top: 5px;" />
                </footer>*@
        }
    </div>

    <div id="popupDelete" style="display:none">
        <div>
            <form class="smart-form">
                <fieldset>
                    <div class="divlabel" style="width:100px;">
                        <label class="label" style="float:left;margin-top:-14px">Bạn có chắc chắn xóa bỏ thông tin này ?</label>
                    </div>
                </fieldset>
                <footer style="border:none">
                    <button type="button" class="k-button k-button-icontext btn_custom" id="btnApprove" style="float: left; margin-left: 86px; height: 24px; background-color: \\#6fb3e0" onclick="ConfirmDelele(0, this)">Đồng ý</button>
                    <button type="button" class="k-button k-button-icontext btn_custom" id="btnCancel" style="float: left; margin-left: 10px; height: 24px; background-color: \\#abbac3; " onclick="ConfirmDelele(1, this)">Hủy bỏ</button>
                </footer>
            </form>
        </div>
    </div>

</section>

<script>
    var keyAction;
    $(document).ready(function () {
        //active menu
        $("ul#menuLeft").find('#ul_root_5').addClass('open');
        $("ul#menuLeft").find('#ul_root_5').css('display', 'block');
        $("ul#menuLeft").find('#ul_root_5 ul#ul_item_5').css('display', 'block');
        $("#menu_RodOne").parent().addClass('active');

        $("#searchTypeId").select2();
        $("#s2id_searchTypeId").css('width', '240px');

        $('#searchTypeId').val('A').trigger('change');

        $("#TypeId").select2();
        $("#s2id_TypeId").css('width', '240px');

        $("#TypeCode").select2();
        $("#s2id_TypeCode").css('width', '240px');


        //fillter & form popup
        setTimeout(function () {
            doSearch();
        }, 500);

        $('#searchTypeId').bind('change', function () {
            doSearch();
        })

        $('#TypeId').bind('change', function () {
            GetRodHeader_popup();
        })

        $(".allownumericwithdecimal").on("keypress keyup blur", function (event) {
            $(this).val($(this).val().replace(/[^0-9\.]/g, ''));
            if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        })

        $('#popup').kendoWindow({
            width: "400px",
            actions: ["Close"],
            visible: false,
            resizable: false,
            close: function (e) {
                $("#divMaskPopup").hide();
            }
        });

        $('#popupDelete').kendoWindow({
            width: "300px",
            actions: ["Close"],
            title: "Cảnh báo",
            visible: false,
            resizable: false,
            close: function (e) {
                $("#divMaskPopup").hide();
            }
        });

        $("#formPopup").validate({
            // Rules for form validation
            rules: {
                TypeId: {
                    required: true,
                },
                Code: {
                    required: true,
                },
                Name: {
                    required: true,
                },
                Weight: {
                    required: true,
                    number: true
                },
                TypeCode: {
                    required: true,
                },

            },

            // Messages for form validation
            messages: {
                TypeId: {
                    required: "Thông tin bắt buộc"
                },
                Code: {
                    required: "Thông tin bắt buộc"
                },
                Name: {
                    required: "Thông tin bắt buộc"
                },

                Weight: {
                    required: "Thông tin bắt buộc",
                    number: "Nhập số"
                },
                TypeCode: {
                    required: "Thông tin bắt buộc",
                    // alphanumeric: true
                },

            },
            errorPlacement: function (error, element) {
                error.insertAfter(element);
            },
            submitHandler: function (form) {
                $(form).ajaxSubmit({
                    //clearForm: true,//To clear form after ajax submitting
                    beforeSend: function () { $("#loading").removeClass('hide'); },
                    success: function (data) {
                        if (data.success) {
                            if (keyAction == 0) {
                                // Create
                                //$("#formPopup").find('fieldset:eq(0) section:eq(0)').empty().append('<div style="float: left; width: 120px; margin-left:0;"><label class="label" style="float: right;">Mã (*)</label></div><div style="float: left; width: 240px; margin-right: 0; margin-left: 10px;"> <label style="float: right;text-align: left;width: 240px;height: 19px;padding-top: 2px;"><strong style="color:red;">' + data.Id + '</strong><input type="hidden" id="Id" name="Id" value="' + data.Id + '"/></label> <div style="clear:both"></div></di>');
                                //$("#formPopup").find('fieldset:eq(0) section:eq(0)').show();
                                ////$("#CreatedAt").val(dateToString(data.CreatedAt));
                                //$("#Id").val(data.Id);
                                //keyAction = -1;
                                $('#popup').data("kendoWindow").close();
                            }
                            $("#grid").data("kendoGrid").dataSource.read();
                            alertBox("Thành công!", " Lưu thành công", true, 3000);
                            $("#loading").addClass('hide');
                        }
                        else {
                            alertBox("Báo lỗi! ", data.message, false, 3000);
                            $("#loading").addClass('hide');
                            console.log(data.message);
                        }
                    }
                });
                return false;
            }
        });
    });


    var xOffset = 10;
    var yOffset = 30;

    //$("div.k-grid-content table tr td#grid_active_cell a#pic.preview").hover(function (e) {
    //    this.t = this.title;
    //    this.title = "";
    //    var c = (this.t != "") ? "<br/>" + this.t : "";
    //    $("body").append("<p id='preview'><img src='" + this.href + "' alt='Image preview' />" + c + "</p>");
    //    $("#preview")
    //        .css({
    //            "top": (e.pageY - xOffset) + "px",
    //            "left": (e.pageX + yOffset) + "px",
    //            "position": "absolute",
    //            border: "4px solid #888",
    //            background: "fff",
    //            padding: "5px",
    //        })
    //        .fadeIn("fast");
    //},
    //function () {
    //    this.title = this.t;
    //    $("#preview").remove();
    //});

    $("#grid").on("mouseenter", "a.preview", function (e) {
        //alert("aaa");
        this.t = this.title;
        this.title = "";
        var c = (this.t != "") ? "<br/>" + this.t : "";
        $("body").append("<p id='preview'><img src='" + this.href + "' alt='Image preview' />" + c + "</p>");
        $("#preview")
            .css({
                "top": (e.pageY - xOffset) + "px",
                "left": (e.pageX + yOffset) + "px",
                "position": "absolute",
                border: "4px solid #888",
                background: "fff",
                padding: "5px",
            })
            .fadeIn("fast");

    });

    $("#grid").on("mouseleave", "a.preview", function (e) {
        this.title = this.t;
        $("#preview").remove();
    });


    $(".preview").hover(function (e) {
        this.t = this.title;
        this.title = "";
        var c = (this.t != "") ? "<br/>" + this.t : "";
        $("body").append("<p id='preview'><img src='" + this.href + "' alt='Image preview' />" + c + "</p>");
        $("#preview")
            .css({
                "top": (e.pageY - xOffset) + "px",
                "left": (e.pageX + yOffset) + "px",
                "position": "absolute",
                border: "4px solid #888",
                background: "fff",
                padding: "5px",
            })
            .fadeIn("fast");
    },
    function () {
        this.title = this.t;
        $("#preview").remove();
    });


    $("a.preview").mousemove(function (e) {
        $("#preview")
            .css("top", (e.pageY - xOffset) + "px")
            .css("left", (e.pageX + yOffset) + "px");
    });

    $(".allownumericwithdecimal").on("keypress keyup blur", function (event) {
        $(this).val($(this).val().replace(/[^0-9\.]/g, ''));
        if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
            event.preventDefault();
        }
    });

    function checkAllHeader(e) {
        var x = $(e).prop('checked');
        $('#grid').find(".checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }

    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#grid').offset().top);
        var gridElement = $("#grid"),
        dataArea = gridElement.find(".k-grid-content"),
        otherElements = gridElement.children().not(".k-grid-content"),
        otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 1);
    }

    //grid
    function onDatabound(e) {
        resizeGrid();
        var grid = $("#grid").data("kendoGrid");
        var requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
        .options.parameterMap({
            page: grid.dataSource.page(),
            sort: grid.dataSource.sort(),
            filter: grid.dataSource.filter()
        });
        var $exportLink = grid.element.find('.export');
        var href = $exportLink.attr('href');
        if (href) {
            href = href.replace(/sort=([^&]*)/, 'sort=' + requestObject.sort || '~');
            href = href.replace(/filter=([^&]*)/, 'filter=' + (requestObject.filter || '~'));
            $exportLink.attr('href', href);
        }
        $("#divLoading").hide();
    }

    function onRequestEnd(e) {
        debugger
        if (e.type == "create" && !e.response.Errors) {
            $("#grid").data("kendoGrid").dataSource.read();
            alertBox("Thành công! ", "Tạo mới thành công", true, 3000);
        }
        else
            if (e.type == "update" && !e.response.Errors) {
                $("#grid").data("kendoGrid").dataSource.read();
                alertBox("Thành công! ", "Cập nhật thành công", true, 3000);
            }
        //$("#gridpopup").data("kendoGrid").dataSource.read();
    }

    function error_handler(e) {
        debugger
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alertBox("Báo lỗi! ", message, false, 3000);
        }
    }

    function onRequestStart(e) {
        blockUI(false);

    }

    function blockUI(isMark) {
        if (isMark) {
            $(document).ajaxStart($.blockUI({ message: '<i class="fa fa-spinner fa-3x fa-lg fa-spin txt-color-blueDark"></i>', theme: false })).ajaxStop($.unblockUI);
        }
        else {
            $(document).ajaxStart($.blockUI({ message: '<i class="fa fa-spinner fa-3x fa-lg fa-spin txt-color-blueDark"></i>', theme: false, overlayCSS: { backgroundColor: 'transparent' } })).ajaxStop($.unblockUI);
        }
    }

    //function Cancel() {
    //    $('#grid').data('kendoGrid').cancelChanges();
    //}

    //function update() {
    //    var ProductType = $("#searchTypeId").val();
    //    if (ProductType == "") {
    //        alertBox("Báo lỗi! ", "Vui lòng chọn loại.", false, 3000);
    //        return;
    //    }

    //    if ($('#grid').data('kendoGrid').dataSource.hasChanges() == true) {
    //        $('#grid').data('kendoGrid').saveChanges();
    //    }
    //}

    //function onDataDetail() {
    //    var TypeId = $("#searchTypeId").val();
    //    return {
    //        TypeId: TypeId
    //    };
    //}

    function doSearch() {
        var grid = $("#grid").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = $("#searchTypeId").val();
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "TypeId", operator: "eq", value: text });
            filter.filters.push(filterOr);
        }
        grid.dataSource.filter(filter);
        GetRodHeader();
    }

    function AddNewRowGrid() {
        debugger;
        var TypeId = $("#searchTypeId").val();
        if (TypeId == "") {
            alertBox("Báo lỗi! ", "Vui lòng chọn loại.", false, 3000);
        }
        else {
            var ds = $("#grid").data("kendoGrid").dataSource;
            ds.insert(0, {
                Id: 0,
                Code: "",
                Name: "",
                Weight: "0",
            });
        }
    }

    function GetRodHeader() {
        if ($("#searchTypeId").val() != "" && $("#searchTypeId").val() != null) {
            $.post(r + "/RodOne/GetRodHeader", { TypeId: $("#searchTypeId").val() }, function (data) {
                if (data.success) {

                    $("#grid thead [data-field=Code] .k-link").html(data.data.HeaderCode)
                    $("#grid thead [data-field=Name] .k-link").html(data.data.HeaderName)

                    var grid = $("#grid").data("kendoGrid");

                    grid.showColumn("Code");
                    if (data.data.HaveCode == false) {
                        grid.hideColumn("Code");
                    }

                    grid.showColumn("Weight");
                    if (data.data.HaveWeight == false) {
                        grid.hideColumn("Weight");
                    }


                    grid.showColumn("TypeCode");
                    grid.showColumn("ImagePath");
                    if (data.data.HaveImage == false) {
                        grid.hideColumn("TypeCode");
                        grid.hideColumn("ImagePath");
                    }

                }
            });
        }
        else {

        }
    }

    function GetRodHeader_popup() {
        if ($("#TypeId").val() != "" && $("#TypeId").val() != null) {
            $.post(r + "/RodOne/GetRodHeader", { TypeId: $("#TypeId").val() }, function (data) {
                if (data.success) {

                    $('#lblCode').text(data.data.HeaderCode);
                    $('#lblName').text(data.data.HeaderName);

                    if (data.data.HaveCode == false) {
                        $("#formPopup").find('fieldset:eq(0) section:eq(3)').hide();
                        if (keyAction == 0) {
                            $('#Code').val('a');
                        }
                    }
                    else {
                        $("#formPopup").find('fieldset:eq(0) section:eq(3)').show();
                        if (keyAction == 0) {
                            $('#Code').val('');
                        }
                    }

                    if (data.data.HaveCode == false) {
                        $("#formPopup").find('fieldset:eq(0) section:eq(3)').hide();
                        if (keyAction == 0) {
                            $('#Code').val('a');
                        }
                    }
                    else {
                        $("#formPopup").find('fieldset:eq(0) section:eq(3)').show();
                        if (keyAction == 0) {
                            $('#Code').val('');
                        }
                    }

                    if (data.data.HaveWeight == false) {

                        $("#formPopup").find('fieldset:eq(0) section:eq(5)').hide();
                        if (keyAction == 0) {
                            $('#Weight').val('0');
                        }
                    }
                    else {
                        $("#formPopup").find('fieldset:eq(0) section:eq(5)').show();
                        if (keyAction == 0) {
                            $('#Weight').val('');
                        }
                    }

                    $("#TypeCpde").html('');
                    var html = "<option value =''>--Chọn loại--</option>";
                    for (var i = 0; i < data.listLoaiCan.length ; i++) {
                        html += "<option value ='" + data.listLoaiCan[i].ParamID + "'>" + data.listLoaiCan[i].Value + "</option>";
                    }
                    $("#TypeCpde").html(html);
                    $("#TypeCpde").val('');
                    $("#TypeCpde").trigger('change');

                    if (data.data.HaveImage == false) {
                        $('#TypeCode').val('a');
                        $("#formPopup").find('fieldset:eq(0) section:eq(6)').hide();
                        $("#formPopup").find('fieldset:eq(0) section:eq(2)').hide();
                    }
                    else {
                        $("#formPopup").find('fieldset:eq(0) section:eq(2)').show();
                        $("#formPopup").find('fieldset:eq(0) section:eq(6)').show();
                    }
                }
            });
        }
        else {

        }
    }

    function ConfirmDelele(key, obj) {
        if (listrowid != null && listrowid != "") {
            //var c = confirm("Bạn có chắc chắn muốn ngưng hoạt động?.");
            if (key == 0) {
                $('#popupDelete').data("kendoWindow").close();
                $.post(r + "/RodOne/Delete", { data: listrowid, }, function (data) {
                    if (data.success) {
                        alertBox("Thành công!", " Xóa thành công", true, 3000);
                        $("#grid").data("kendoGrid").dataSource.read();
                        $('#checkboxcheckAll').prop('checked', false);
                    }
                    else {
                        alertBox("Báo lỗi! ", data.message, false, 3000);
                        $("#grid").data("kendoGrid").dataSource.read();
                    }
                });
            }
            else {
                $('#popupDelete').data("kendoWindow").close();
                return false;
            }
        }
    }


    var listrowid = "";
    function Delete() {
        listrowid = "";
        var flagfail = 0;
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                var currentRow = $(this).closest("tr");
                var dataItem = $("#grid").data("kendoGrid").dataItem(currentRow);
                listrowid += $(this).attr("id") + '@@@@';

                //var dataSource = $("#grid").data("kendoGrid").dataSource;
                //dataSource.remove(dataItem);
            }
        });
        if (listrowid != null && listrowid != "") {
            debugger
            $("#divMaskPopup").show();
            var popupDelete = $('#popupDelete').data("kendoWindow");
            popupDelete.center().open();
            $(".k-window span.k-i-close").click(function () {
                eventHotKey = false;
                $("#divMaskPopup").hide();
            });
        }
        else {
            alertBox("Báo lỗi! ", "Vui lòng chọn dữ liệu.", false, 3000);
            flagfail = 0;
            return;
        }
    }

    //popup
    function onOpenPopup(key, obj) {
        eventHotKey = true;
        $("#formPopup").find('section em').remove();
        $("#formPopup").find('section label').removeClass('state-error').removeClass('state-success');
        idPopup = ".k-window";
        $("#divMaskPopup").show();
        var popup = $('#popup').data("kendoWindow");
        popup.center().open();
        $("#formPopup").find('fieldset:eq(0) section:eq(0)').empty();
        $(".k-window span.k-i-close").click(function () {
            eventHotKey = false;
            $("#divMaskPopup").hide();
        });
        //Tạo mới
        if (key == 0) {
            keyAction = key;
            popup.title('Thêm');
            LoadDataPopup();
        }
            // Cập nhậpS
        else {
            keyAction = -1;
            popup.title('Cập nhật thông tin cấu hình');
            Obj = obj;
            id = $(obj).data('id');
            $("#formPopup").find('fieldset:eq(0) section:eq(0)').show();
            $("#formPopup").find('fieldset:eq(0) section:eq(0)').empty().append('<div style="float: left; width: 120px; margin-left:0;"><label class="label" style="float: right;">Mã (*)</label></div><div style="float: left; width: 240px; margin-right: 0; margin-left: 10px;"> <label style="float: right;text-align: left;width: 240px;height: 19px;padding-top: 2px;"><strong style="color:red;">' + id + '</strong><input type="hidden" id="Id" name="Id" value="' + id + '"/></label> <div style="clear:both"></div></di>');
            LoadDataPopup();
        }
    }

    function LoadDataPopup() {

        if (keyAction == 0) {
            $('#formPopup')[0].reset();
            $("#formPopup").find('fieldset:eq(0) section:eq(0)').empty();

            //$("#TypeId").val('');
            //$('#TypeId').trigger('change');

            $('#TypeId').val($('#searchTypeId').val()).trigger('change');

            $("#FileUpload").val('');
            $("#FileUpload").text('');

            setTimeout(function () {
                $("#Code").focus();
            }, 500);
        }
        else {
            var currentRow = $(Obj).closest("tr");
            var dataItem = $("#grid").data("kendoGrid").dataItem(currentRow);



            $('#TypeId').val(dataItem.TypeId);
            $('#TypeId').trigger('change');

            $("#TypeCode").val(dataItem.TypeCode);
            $('#TypeCode').trigger('change');

            $('#Id').val(dataItem.Id);
            $('#Code').val(dataItem.Code);
            $('#Name').val(dataItem.Name);
            $('#Weight').val(dataItem.Weight);

            $("#FileUpload").val('');
            $("#FileUpload").text('');

            setTimeout(function () {
                $("#Code").focus();
            }, 500);
        }
    }

    function GetImage(image) {
        //var returnString = '<img src="~/Images/normal_234.png" title=\"image\" height=\"24\" alt=\"image\"/>';

        var content = "<a href=\"Url.Content(\"~/Upload/\")" + image + "?width=400\"class=\"preview\"> <img src=\"Url.Content(\"~/Upload/\")" + image + "?width=32\" /></a>";
        return content;
    }
</script>